{"remainingRequest":"/home/kai/aaa/praxis/praxis/novice/04-03/vue-cli-project/vue-cli-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kai/aaa/praxis/praxis/novice/04-03/vue-cli-project/vue-cli-project/src/components/Calculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kai/aaa/praxis/praxis/novice/04-03/vue-cli-project/vue-cli-project/src/components/Calculator.vue","mtime":1562731031247},{"path":"/home/kai/aaa/praxis/praxis/novice/04-03/vue-cli-project/vue-cli-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kai/aaa/praxis/praxis/novice/04-03/vue-cli-project/vue-cli-project/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kai/aaa/praxis/praxis/novice/04-03/vue-cli-project/vue-cli-project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kai/aaa/praxis/praxis/novice/04-03/vue-cli-project/vue-cli-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kai/aaa/praxis/praxis/novice/04-03/vue-cli-project/vue-cli-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      previous: null,\n      display: 0,\n      operator: null,\n      operatorClicked: false\n    };\n  },\n  methods: {\n    clear() {\n      this.display = 0;\n    },\n    percent() {\n      this.display = this.display / 100;\n    },\n    append(number) {\n      if (this.operatorClicked === true) {\n        this.display = '';\n        this.operatorClicked = false;\n      }\n      this.display =\n        this.display === 0\n          ? (this.display = number)\n          : '' + this.display + number;\n    },\n    decimal() {\n      if (this.display.indexOf('.') === -1) {\n        this.append('.');\n      }\n    },\n    divide() {\n      this.operator = (a, b) => a / b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    multiply() {\n      this.operator = (a, b) => a * b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    subtract() {\n      this.operator = (a, b) => a - b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    add() {\n      this.operator = (a, b) => a + b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    equal() {\n      this.display = this.operator(Number(this.previous), Number(this.display));\n      this.previous = null;\n      this.operatorClicked = true;\n    }\n  }\n};\n",{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calculator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class='calculator' onselectstart='return false'>\n    <div class='display'>{{display}}</div>\n    <div @click='clear' class='button darker'>C</div>\n    <div @click='equal' class='button operator'>=</div>\n    <div @click='percent' class='button darker'>%</div>\n    <div @click='divide' class='button operator'>รท</div>\n    <div @click='append(7)' class='button'>7</div>\n    <div @click='append(9)' class='button'>9</div>\n    <div @click='append(8)' class='button'>8</div>\n    <div @click='multiply' class='button operator'>x</div>\n    <div @click='append(4)' class='button'>4</div>\n    <div @click='append(5)' class='button'>5</div>\n    <div @click='append(6)' class='button'>6</div>\n    <div @click='subtract' class='button operator'>-</div>\n    <div @click='append(1)' class='button'>1</div>\n    <div @click='append(2)' class='button'>2</div>\n    <div @click='append(3)' class='button'>3</div>\n    <div @click='add' class='button operator'>+</div>\n    <div @click='append(0)' class='button zero'>0</div>\n    <div @click='decimal' class='button darker'>.</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      previous: null,\n      display: 0,\n      operator: null,\n      operatorClicked: false\n    };\n  },\n  methods: {\n    clear() {\n      this.display = 0;\n    },\n    percent() {\n      this.display = this.display / 100;\n    },\n    append(number) {\n      if (this.operatorClicked === true) {\n        this.display = '';\n        this.operatorClicked = false;\n      }\n      this.display =\n        this.display === 0\n          ? (this.display = number)\n          : '' + this.display + number;\n    },\n    decimal() {\n      if (this.display.indexOf('.') === -1) {\n        this.append('.');\n      }\n    },\n    divide() {\n      this.operator = (a, b) => a / b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    multiply() {\n      this.operator = (a, b) => a * b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    subtract() {\n      this.operator = (a, b) => a - b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    add() {\n      this.operator = (a, b) => a + b;\n      this.previous = this.display;\n      this.operatorClicked = true;\n    },\n    equal() {\n      this.display = this.operator(Number(this.previous), Number(this.display));\n      this.previous = null;\n      this.operatorClicked = true;\n    }\n  }\n};\n</script>\n\n<style>\n* {\n  background: grey;\n}\n.calculator {\n  width: 400px;\n  margin: 0 auto;\n  font-size: 40px;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: minmax(auto, auto);\n  border: 20px groove #999;\n}\n\n.display {\n  grid-column: 1/5;\n  background: #333;\n  color: #fff;\n  padding: 20px;\n  text-align: right;\n}\n\n.zero {\n  grid-column: 1/4;\n}\n\n.button {\n  padding: 10px;\n  background: linear-gradient(#fafafa, lightgrey);\n  border: 1px solid #999;\n  cursor: pointer;\n}\n\n.button:active {\n  background: #777;\n  color: #fff;\n}\n\n.operator {\n  background-color: red;\n}\n\n\n\n</style>\n"]}]}